
#include <bits/stdc++.h>
using namespace std;
#define forn(i, n) for (int i = 0; i < int(n); i++)

typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> pii;
  
#define mp make_pair
#define pb push_back
#define f first
#define s second
#define lb lower_bound
#define ub upper_bound
 
const int MOD = 1000000007;
double PI = 4*atan(1);
 
#define IO(NAME) \
    cin.tie(0)->sync_with_stdio(0); \
    if(fopen(NAME ".in","r")) freopen(NAME ".in","r",stdin), \
    freopen(NAME ".out","w",stdout); 


template<template <typename> class P = std::less > 
struct compare_pair_second { 
    template<class T1, class T2> bool operator()(const std::pair<T1, T2>& left, const std::pair<T1, T2>& right) {
        return P<T2>()(left.second, right.second);
    }
};
  
#define log(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); \
stringstream _ss(_s); istream_iterator<string> _it(_ss);  cout<< "LOG - line:" << __LINE__<< "      "; err(_it, args); cout <<endl;}
void err(istream_iterator<string> it) {}
template<typename T, typename... Args>
void err(istream_iterator<string> it, T a, Args... args) {
	cout << *it << " = " << a <<"; ";
	err(++it, args...);
}


int main() {
    ll N, T;
    std::cin >> N >> T;

    std::vector<std::pair<ll, ll>> deliveries(N);
    for (ll i = 0; i < N; ++i) {
        std::cin >> deliveries[i].first >> deliveries[i].second;
    }
    deliveries.push_back({T + 1, 0});

    ll remaining = 0, total = 0, last_d = 0;
    for (const auto& delivery : deliveries) {
        ll d = delivery.first;
        ll b = delivery.second;

        total += b;
        remaining -= d - last_d;
        //log(total, d, last_d,  remaining);
        last_d = d;
        if ( remaining > 0 ) {
            remaining = remaining + b;
        }
        else {
            remaining =  b;
        }
        
    }

    std::cout << total - remaining << std::endl;

    return 0;
}
